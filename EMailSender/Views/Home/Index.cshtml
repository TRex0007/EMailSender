@model IEnumerable<EMailSender.Models.Task>
@using GridMvc.Html
@{
    ViewBag.Title = "Manage Tasks";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Manage Tasks</h2>

<link href="@Url.Content("~/Content/Gridmvc.css")" rel="stylesheet" />
<link href="@Url.Content("~/Content/bootstrap.min.css")" rel="stylesheet" />
<script src="@Url.Content("~/Scripts/jquery-1.10.2.min.js")"></script>
<script src="@Url.Content("~/Scripts/gridmvc.min.js")"></script>

<div class="code-cut">
    @Html.Grid(Model).Columns(Columns =>
{
    Columns.Add(c => c.Mail).Titled("Mail").Sortable(true);
    Columns.Add(c => c.Status).Titled("Status").Sortable(true).SetWidth(20);
    Columns.Add(c => c.QuantityOfSentMails).Titled("Quantity Of Sent Mails").Sortable(true).SetWidth(20);
    Columns.Add(c => c.QuantityOfUsers).Titled("Quantity Of Users").Sortable(true).SetWidth(20);
    Columns.Add()
    .Encoded(false)
    .Sanitized(false)
    .SetWidth(20)
    .RenderValueAs(i => Html.ActionLink("Edit", "Edit", "Tasks", new { id = i.TaskId }, null));
    Columns.Add()
    .Encoded(false)
    .Sanitized(false)
    .SetWidth(20)
    .RenderValueAs(i => Html.ActionLink(i.Status == "stopped" ? "Run" : "Stop", "SendEmailsAsync", "Home", new { id = i.TaskId }, null));

}).WithPaging(10).Sortable(true)
</div>